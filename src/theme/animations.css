/**
 * animations.css
 *
 * Defines custom keyframe animations and utility classes for Tailwind CSS.
 * Assumes Tailwind v4 configuration where CSS files like this are processed.
 */

/* ==========================================================================
   Keyframe Animations
   ========================================================================== */

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes ping {
  75%,
  100% {
    transform: scale(1.5); /* Slightly larger ping than default TW */
    opacity: 0;
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6; /* Subtle pulse */
  }
}

@keyframes bounce {
  0%,
  100% {
    transform: translateY(-20%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: translateY(0);
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translate3d(0, 20px, 0); /* Start slightly below */
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fade-out-down {
  from {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  to {
    opacity: 0;
    transform: translate3d(0, 20px, 0); /* End slightly below */
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-out-left {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

/* Shimmer effect for loading placeholders */
@keyframes shimmer {
  to {
    background-position: -200%;
  }
}

/* ==========================================================================
     Animation Utilities
     ========================================================================== */

@layer utilities {
  /* Apply Animations */
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  .animate-ping {
    /* Uses hsla for transparency; works better with dark/light backgrounds */
    /* Apply using a pseudo-element for better compositing */
    position: relative; /* Needed for pseudo-element positioning */
  }
  .animate-ping::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit; /* Match parent's border radius */
    background-color: currentColor; /* Use text color or explicitly set bg */
    opacity: 0.75;
    animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    /* Optional: scale the ping element slightly smaller */
    /* transform: scale(0.9); */
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  .animate-bounce {
    animation: bounce 1s infinite;
  }

  /* One-shot animations (often used with JS to add/remove classes) */
  /* 'forwards' keeps the end state of the animation */
  .animate-fade-in {
    animation: fade-in 0.5s ease-out forwards;
  }
  .animate-fade-out {
    animation: fade-out 0.5s ease-in forwards;
  }
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }
  .animate-fade-out-down {
    animation: fade-out-down 0.6s ease-in forwards;
  }
  .animate-slide-in-right {
    animation: slide-in-right 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  }
  .animate-slide-out-left {
    animation: slide-out-left 0.5s cubic-bezier(0.55, 0.085, 0.68, 0.53)
      forwards;
  }

  /* Shimmer Utility */
  .animate-shimmer {
    --color-one: rgba(255, 255, 255, 0.4);
    --color-two: rgba(255, 255, 255, 0.8);
    background-image: linear-gradient(
      120deg,
      var(--color-one) 0%,
      var(--color-two) 5%,
      var(--color-one) 100%
    );
    position: relative;
    display: inline-block;
    overflow: hidden;
    background-clip: text;
    background-size: 200%;
    color: transparent;
    animation: shimmer 4s infinite linear;
  }

  /* Animation Control Utilities */
  .animate-paused {
    animation-play-state: paused;
  }
  .animate-running {
    animation-play-state: running;
  }
  .animate-none {
    animation: none;
  }

  /* You can add more utilities for delay, direction, fill-mode etc. */
  /* Example:
    .animation-delay-100 { animation-delay: 100ms; }
    .animation-delay-200 { animation-delay: 200ms; }
    */
  /* However, Tailwind v4 might have built-in ways or conventions for this,
       often using arbitrary values like `delay-[100ms]` */
}
